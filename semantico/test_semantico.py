# -*- coding: utf-8 -*-

from AnalisadorSemantico import AnalisadorSemantico
from ClassesAuxiliares import NoInterno, NoFolha, SemanticException
import re, os.path
import sys
import pytest


class Tracer:

	def __init__(self, func):
		self.__func = func
		self.__stack = []
	
	def trace(self, *args, **kwargs):
		sys.settrace(self.trace_calls)
		result = self.__func(*args, **kwargs)
		sys.settrace(None)
		return result, self.__stack
	
	def trace_calls(self, frame, event, arg):
		if event == "call":
			function_name = frame.f_code.co_name
			caller_name = frame.f_back.f_code.co_name
			self.__stack.append((caller_name, function_name))


def verifica_imports(arq="AnalisadorSemantico.py", excecoes=["ClassesAuxiliares", "NoTabela", "SemanticException"]):
	excecoes += ["import", "from"]
	if os.path.exists(arq):
		with open(arq, "r", encoding="utf-8") as f:
			for linha in f:
				if re.search(r"(^import[ ]|[ ]import[ ])", linha):
					bibliotecas = re.findall(r"(?is)\w+", linha)
					for nome in bibliotecas:
						assert nome in excecoes, f"Erro: o arquivo \"{arq}\" n√£o pode importar bibliotecas externas"



@pytest.mark.parametrize('arquivo,arvore,metodos',
[

# Teste do codigo0.w
("codigo0.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo0", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="b", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="c", linha=3), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="z", linha=4), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=5), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="soma", linha=5), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="qtd", linha=5), prox=None))), prox=None)))), block=NoInterno(op="block", statementList=None)),
['analisar', 'visitarAlg', 'visitarBlock', 'visitarDeclarations', 'visitarVarDeclaration']),


# Teste do codigo1.w
("codigo1.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo1", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="b", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="c", linha=3), prox=None)))), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a", linha=5), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=5), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="b", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=6), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="c", linha=8), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="b", linha=8), esq=None, dir=None), dir=None)), prox=None)))))),
['analisar', 'visitarExpression', 'visitarSumExpression', 'visitarAlg', 'visitarBlock', 'visitarDeclarations', 'visitarVarDeclaration']),

# Teste do codigo2.w
("codigo2.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo2", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a1", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a2", linha=3), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a3", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a4", linha=4), prox=None))), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a1", linha=6), expression=NoInterno(op="expression", oper="|", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="4", linha=6), esq=None, dir=None))), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a4", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper="%", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="4", linha=7), esq=None, dir=None)), dir=None)), prox=None)))),
['analisar', 'visitarExpression', 'visitarSumExpression', 'visitarAlg', 'visitarBlock', 'visitarDeclarations', 'visitarVarDeclaration']),

# Teste do codigo3.w
("codigo3.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo3", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=None))), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=5), expression=NoInterno(op="expression", oper="<", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=5), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="5", linha=5), esq=None, dir=None))), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=6), expression=NoInterno(op="expression", oper=">", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="4", linha=6), esq=None, dir=None)), dir=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="5", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=6), esq=None, dir=None)))), prox=None)))),
['analisar', 'visitarExpression', 'visitarSumExpression', 'visitarAlg', 'visitarBlock', 'visitarDeclarations', 'visitarVarDeclaration']),


# Teste do codigo4.w
("codigo4.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo4", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="b", linha=3), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=None))), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="5", linha=6), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="b", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=":", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None)), dir=None), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=8), expression=NoInterno(op="expression", oper="|", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="16", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="b", linha=8), esq=None, dir=None))), prox=NoInterno(op="statementList", statement=NoInterno(op="ifStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=9), esq=None, dir=None), dir=None), blockIf=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=10), esq=None, dir=None), dir=None)), prox=None)), blockElse=None), prox=None)))))),
['analisar', 'visitarExpression', 'visitarSumExpression', 'visitarAlg', 'visitarBlock', 'visitarDeclarations', 'visitarVarDeclaration']),

])
def test_codigo_sem_erro(arquivo, arvore, metodos):
	semantico = None
	try:
		semantico = AnalisadorSemantico(arvore)
	except:
		raise AssertionError("Erro ao instanciar a classe AnalisadorSemantico")
	if semantico:
		try:
			dictMetodos = {k: 0 for k in metodos}
			tracer = Tracer(semantico.analisar)
			resultado, pilha = tracer.trace()
			for metodoAnt, metodoProx in pilha:
				if metodoProx in dictMetodos:
					dictMetodos[metodoProx] += 1
			metodosNaoChamados = []
			for metodo in sorted(dictMetodos.keys()):
				if dictMetodos[metodo] == 0:
					metodosNaoChamados.append(metodo)
			if metodosNaoChamados:  # se a lista n√£o √© vazia
				raise AssertionError("M√©todos n√£o chamados: " + ", ".join(metodosNaoChamados))
		except SemanticException:
			raise AssertionError("A classe AnalisadorSemantico lan√ßou um SemanticException quando n√£o deveria")



@pytest.mark.parametrize('arquivo,arvore,msgErroEsperada',
[
# Teste do codigo5.w
("codigo5.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo5", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="exemplo5", linha=3), prox=None)), prox=None)), block=NoInterno(op="block", statementList=None)),
[r'(?is)O identificador "exemplo5" na linha 3 foi declarado anteriormente']),

# Teste do codigo6.w
("codigo6.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo6", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="b", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="c", linha=3), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=5), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="soma", linha=5), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="exemplo6", linha=5), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="qtd", linha=5), prox=None)))), prox=None)))), block=NoInterno(op="block", statementList=None)),
[r'(?is)O identificador "exemplo6" na linha 5 foi declarado anteriormente']),

# Teste do codigo7.w
("codigo7.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo7", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="acertou", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="finalizou", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="encerrou", linha=3), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="pessoas", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="i", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="finalizou", linha=4), prox=None)))), prox=None))), block=NoInterno(op="block", statementList=None)),
[r'(?is)O identificador "finalizou" na linha 4 foi declarado anteriormente']),

# Teste do codigo8.w
("codigo8.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo8", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=None)), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=5), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="10", linha=5), esq=None, dir=None), dir=None)), prox=None))),
[r'(?is)O identificador "y" na linha 5 n√£o foi declarado']),

# Teste do codigo9.w
("codigo9.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo9", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="acertou", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="encerrou", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="zerou", linha=3), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=None))), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="10", linha=6), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="acertou", linha=8), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="true", linha=8), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="pontuou", linha=9), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="true", linha=9), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="encerrou", linha=10), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="false", linha=10), esq=None, dir=None), dir=None)), prox=None))))))),
[r'(?is)O identificador "pontuou" na linha 9 n√£o foi declarado']),

# Teste do codigo10.w
("codigo10.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo10", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="z", linha=3), prox=None)))), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=5), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=5), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="z", linha=6), esq=None, dir=None)), dir=None)), prox=None)))),
[r'(?is)O identificador "z" na linha 6 n√£o foi inicializado']),

# Teste do codigo11.w
("codigo11.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo11", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="z", linha=3), prox=None)))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="resp", linha=4), prox=None)), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=6), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="resp", linha=8), expression=NoInterno(op="expression", oper=">", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="y", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=8), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=8), esq=None, dir=None)), dir=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="z", linha=8), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=8), esq=None, dir=None)))), prox=None))))),
[r'(?is)O identificador "z" na linha 8 n√£o foi inicializado']),

# Teste do codigo12.w
("codigo12.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo12", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=None))), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=5), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=5), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="z", linha=6), esq=None, dir=None)), dir=None)), prox=None)))),
[r'(?is)O identificador "z" na linha 6 n√£o foi declarado']),

# Teste do codigo13.w
("codigo13.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo13", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="resp", linha=4), prox=None)), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=6), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="resp", linha=8), expression=NoInterno(op="expression", oper=">", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="y", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=8), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=8), esq=None, dir=None)), dir=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="z", linha=8), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=8), esq=None, dir=None)))), prox=None))))),
[r'(?is)O identificador "z" na linha 8 n√£o foi declarado']),

# Teste do codigo14.w
("codigo14.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo14", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=None)), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=5), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="5", linha=5), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="true", linha=5), esq=None, dir=None)), dir=None)), prox=None))),
[r'(?is)Tipos incompat√≠veis: "5" e "true"']),

# Teste do codigo15.w
("codigo15.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo15", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=3), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="resp", linha=4), prox=None)), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="1", linha=6), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="resp", linha=7), expression=NoInterno(op="expression", oper="<=", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None))), prox=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=":", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="y", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="resp", linha=8), esq=None, dir=None)), dir=None)), prox=None))))),
[r'(?is)Tipos incompat√≠veis: "y" e "resp"']),

# Teste do codigo16.w
("codigo16.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo16", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="i", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="j", linha=3), prox=None))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="multiplo", linha=4), prox=None)), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="i", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="10", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=6), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="j", linha=7), inStatement=NoFolha(op="in", valor="in", linha=7)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="multiplo", linha=8), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="false", linha=8), esq=None, dir=None), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="ifStatement", expression=NoInterno(op="expression", oper="==", esq=NoInterno(op="multiplicativeTerm", oper="%", esq=NoInterno(op="factor", sinal="+", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=":", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="i", linha=9), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="0", linha=9), esq=None, dir=None)), dir=None), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="j", linha=9), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="0", linha=9), esq=None, dir=None)), blockIf=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="multiplo", linha=10), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="log", valor="true", linha=10), esq=None, dir=None), dir=None)), prox=None)), blockElse=None), prox=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="multiplo", linha=12), esq=None, dir=None), dir=None)), prox=None))))))),
[r'(?is)Divis√£o por zero na linha 9']),

# Teste do codigo17.w
("codigo17.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo17", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="257", linha=2), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="resultado1", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="resultado2", linha=4), prox=None))), prox=None)), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="resultado1", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="7", linha=6), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="resultado2", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="-", factor=NoFolha(op="num", valor="7", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="ifStatement", expression=NoInterno(op="expression", oper=">", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="resultado1", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="resultado2", linha=8), esq=None, dir=None)), blockIf=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="resultado1", linha=9), esq=None, dir=None), dir=None)), prox=None)), blockElse=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="resultado2", linha=11), esq=None, dir=None), dir=None)), prox=None))), prox=None))))),
[r'(?is)Expoente negativo na linha 7']),

# Teste do codigo18.w
("codigo18.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo18", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=3), prox=None)), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="z", linha=4), prox=None))), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=6), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="4", linha=6), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="z", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=":", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="y", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=8), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="z", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=8), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=9), esq=None, dir=None), dir=None)), prox=None)))))),
[r'(?is)O identificador "x" na linha 8 n√£o pode receber uma express√£o do tipo "num"']),

# Teste do codigo19.w
("codigo19.w", NoInterno(op="alg", id=NoFolha(op="id", valor="exemplo19", linha=1), declarations=NoInterno(op="declarations", mod=NoFolha(op="number", valor="0", linha=0), varDeclarationList=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="num", linha=3), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="a", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="b", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="c", linha=3), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="d", linha=3), prox=None))))), prox=NoInterno(op="varDeclarationList", varDeclaration=NoInterno(op="varDeclaration", type=NoFolha(op="type", valor="log", linha=4), identifierList=NoInterno(op="identifierList", id=NoFolha(op="id", valor="x", linha=4), prox=NoInterno(op="identifierList", id=NoFolha(op="id", valor="y", linha=4), prox=None))), prox=None))), block=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="a", linha=6), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=6), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="5", linha=6), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="b", linha=7), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="multiplicativeTerm", oper=":", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=7), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None)), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=7), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="c", linha=8), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="sumExpression", oper="+", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="b", linha=8), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=8), esq=None, dir=None)), dir=None), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=8), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="d", linha=9), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="2", linha=9), esq=None, dir=None), dir=NoInterno(op="powerTerm", oper="^", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="3", linha=9), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="num", valor="4", linha=9), esq=None, dir=None))), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="ifStatement", expression=NoInterno(op="expression", oper="|", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="c", linha=10), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="d", linha=10), esq=None, dir=None)), blockIf=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="x", linha=11), expression=NoInterno(op="expression", oper=">", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="a", linha=11), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="b", linha=11), esq=None, dir=None))), prox=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="x", linha=12), esq=None, dir=None), dir=None)), prox=None))), blockElse=NoInterno(op="block", statementList=NoInterno(op="statementList", statement=NoInterno(op="assignStatement", id=NoFolha(op="id", valor="y", linha=14), expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="multiplicativeTerm", oper=".", esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="b", linha=14), esq=None, dir=None), dir=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="c", linha=14), esq=None, dir=None)), dir=None)), prox=NoInterno(op="statementList", statement=NoInterno(op="outStatement", expression=NoInterno(op="expression", oper=None, esq=NoInterno(op="factor", sinal="+", factor=NoFolha(op="id", valor="y", linha=15), esq=None, dir=None), dir=None)), prox=None)))), prox=None))))))),
[r'(?is)O identificador "y" na linha 14 n√£o pode receber uma express√£o do tipo "num"']),

])
def test_codigo_com_erro(arquivo, arvore, msgErroEsperada):
	semantico = None
	ok = False
	try:
		semantico = AnalisadorSemantico(arvore)
	except:
		raise AssertionError("Erro ao instanciar a classe AnalisadorSemantico")
	if semantico:
		try:
			semantico.analisar()
		except SemanticException as e:
			ok = True
			assert re.match(msgErroEsperada[0], str(e)) != None, f"A mensagem de erro est√° diferente: {str(e)}"
	if not ok:
		raise AssertionError("A classe AnalisadorSemantico n√£o lan√ßou a exce√ß√£o esperada")



if __name__ == '__main__':
	pytest.main()

